server {
    listen 80;
    server_name gehaowu.com www.gehaowu.com;
    #return 301 https://gehaowu.com$request_uri? permanent;
    rewrite ^/(.*) https://www.gehaowu.com/$1 permanent;
}
server {
    listen 443 ssl;
    ssl_certificate keys/www.gehaowu.com.crt;
    ssl_certificate_key keys/www.gehaowu.com.key;
    server_name gehaowu.com;
    rewrite ^/(.*) https://www.gehaowu.com/$1 permanent;
}
server {
    listen 443 ssl;
    ssl_certificate  keys/www.gehaowu.com.crt;
    ssl_certificate_key  keys/www.gehaowu.com.key;
    server_name www.gehaowu.com;
    index index.html index.htm default.html;
    root        /home/wwwroot/www.gehaowu.com;
    access_log  /tmp/gehaowu.com.access.log;
    error_log   /tmp/gehaowu.com.error.log;

# 静止访问 "." 开头的隐藏文件
    location ~ /\. {
        deny  all;
    }
# robots.txt 与 favicon.ico 文件访问不记录日志
    location ~* ^/(favicon.ico|robots.txt)$ {
        allow all;
        access_log off;
        log_not_found off;
    }
# 静态文件超期
    location ~* \.(html|htm|css|xml|rss|gif|jpeg|jpg|js|atom|txt|png|ico|bmp|svg|doc|pdf|xhtml|mp3|ogg|mp4|mpeg|webm|)$ {
    expires max;
    #expires off;
    #log_not_found off;
    }
}
#proxy_pass          https://gehaowu.github.io;
#proxy_set_header    Host www.gehaowu.com;
#proxy_set_header    X-Host www.gehaowu.com;
#proxy_set_header    X-Forwarded-For $proxy_add_x_forwarded_for;
#server {
#listen 443 ssl;
#ssl_certificate  keys/www.gehaowu.com.crt;
#ssl_certificate_key  keys/www.gehaowu.com.key;
#server_name www.gehaowu.com;
#location / {
#    slowfs_cache        ghwhomecache;
#    slowfs_cache_key    $uri;
#    slowfs_cache_valid  1d;
#}
#location ~ /purge(/.*) {
#auth_basic "Restricted";
#auth_basic_user_file keys/passwd.db;
#allow				all;
#slowfs_cache_purge	ghwhomecache $1;
#}
#}
http {
                #以上略                
                ##cache##
                proxy_connect_timeout 5;
                proxy_read_timeout 60;
                proxy_send_timeout 5;
                proxy_buffer_size 16k;
                proxy_buffers 4 64k;
                proxy_busy_buffers_size 128k;
                proxy_temp_file_write_size 128k;
                proxy_temp_path /tmp/nginx_temp_cache1; #临时缓存目录
                proxy_cache_path /home/wwwroot/cache1 levels=1:2 keys_zone=cache_one:200m inactive=30d max_size=5g; #设置缓存存放，不懂的参数自己百度搜索下
                ##end##
                #以下略
....
}
server {
        listen 80;
        server_name zhangge.net;
        #缓存清理模块
        location ~ /purge(/.*) {
              allow 127.0.0.1;
              allow 192.168.1.101; #此处表示允许访问缓存清理页面的IP
              deny all;
              proxy_cache_purge cache_one $host$1$is_args$args;
        }
        #缓存html页面，可以缓存伪静态【这是亮点！】
        location ~ .*\.html$ {
              proxy_pass http://127.0.0.1:8080;
              proxy_redirect off;
              proxy_set_header Host $host;
              proxy_cache cache_one;
              #状态为200、302的缓存1天
              proxy_cache_valid 200 302 1d;
              #状态为301的缓存2天
              proxy_cache_valid 301 2d;
              proxy_cache_valid any 1m;
              #浏览器过期时间设置4小时
              expires 4h;
              #忽略头部禁止缓存申明，类似与CDN的强制缓存功能
              proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";
              #在header中插入缓存状态，命中缓存为HIT，没命中则为MISS
              add_header Nginx-Cache “$upstream_cache_status”;
        }
        #图片缓存设置，如果不是使用了Nginx缩略图功能，这个可以不用，效果不明显
        location ~ .*\.(gif|jpg|png|css|jsico)(.*) {
              proxy_pass http://127.0.0.1:8080;
              proxy_redirect off;
              proxy_set_header Host $host;
              proxy_cache cache_one;
              proxy_cache_valid 200 302 30d;
              proxy_cache_valid 301 1d;
              proxy_cache_valid any 1m;
              expires 30d;
              proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";
              add_header Nginx-Cache “$upstream_cache_status”;
        }
        #动态页面直接放过不缓存
        location ~ .*\.(php)(.*){
             proxy_pass http://127.0.0.1:8080;
             proxy_set_header        Host $host;
             proxy_set_header        X-Real-IP $remote_addr;
             proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        #设置缓存黑名单，不缓存指定页面，比如wp后台或其他需要登录态的页面，用分隔符隔开
        location ~ ^/(wp-admin|system)(.*)$ {
             proxy_pass http://127.0.0.1:8080;
             proxy_set_header        Host $host;
             proxy_set_header        X-Real-IP $remote_addr;
             proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        }
        #缓存以斜杠结尾的页面，类似于CDN的目录缓存，如果存在问题请取消缓存机制
        location ~ ^(.*)/$ {
              proxy_pass http://127.0.0.1:8080;
              proxy_redirect off;
              proxy_set_header Host $host;
              proxy_cache cache_one;
              proxy_cache_valid 200 302 1d;
              proxy_cache_valid 301 1d;
              proxy_cache_valid any 1m;
              expires 1h;
              proxy_ignore_headers "Cache-Control" "Expires" "Set-Cookie";
              add_header Nginx-Cache “$upstream_cache_status”;
        }
       location / {
             proxy_pass http://127.0.0.1:8080;
             proxy_set_header        Host $host;
             proxy_set_header        X-Real-IP $remote_addr;
             proxy_set_header        X-Forwarded-For $proxy_add_x_forwarded_for;
        }
}

#新增缓存清理配置
location ~ /purge(/.*) {
            allow               127.0.0.1;
            allow               192.168.1.101;
            deny                all;
            slowfs_cache_purge  fastcache $1;
        }
#在上一篇文章的缩略图模块后新增缓存，让生成的缩略图缓存到磁盘（具体请看上一篇文章）
location ~ .*\.(gif|jpg|jpeg|png|bmp)$ {
            set $width '';
            set $height '';
            set $width $arg_width;
            set $height $arg_height;
            if ( $width != '' ) {
               add_header Thumbnail "By Nginx";
            }
            if ( $height = '' ) {
                set $height '-';
            }
            if ( $width = '' ) {
                set $width '-';
                set $height '-';
            }
            image_filter resize $width $height;
            image_filter_buffer 5M;
            image_filter_jpeg_quality 80;
            image_filter_transparency on;
 
            #新增缓存配置
            slowfs_cache        fastcache;
            slowfs_cache_key    $uri;
            slowfs_cache_valid  1d;
            #在header中插入缓存标识，比如：HIT/MISS from zhangge.net
            add_header X-Cache '$slowfs_cache_status from $host';
            expires  max;
}



http {
    slowfs_cache_path /data/cache/proxy_cache_dir  levels=1:2   keys_zone=fastcache:4096m inactive=1d max_size=20g;
    slowfs_temp_path  /data/cache/proxy_temp_dir 1 2;
 
    server {
        location ~ /purge(/.*) {
            allow               127.0.0.1;
            allow               10.0.0.0/8;
            deny                all;
            slowfs_cache_purge  fastcache $1;
        }
 
        location ~* \.(gif|jpg|jpeg|css|js|bmp|png)$ {
            slowfs_cache        fastcache;
            slowfs_cache_key    $uri;
            slowfs_cache_valid  1d;
            add_header X-Cache '$slowfs_cache_status from $host';
            expires  max;
        }
 
    }
}
